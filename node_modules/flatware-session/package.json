{
  "_args": [
    [
      "flatware-session@0.1.x",
      "/Users/ohmh/workspace2/rm/todo"
    ]
  ],
  "_from": "flatware-session@>=0.1.0 <0.2.0",
  "_id": "flatware-session@0.1.1",
  "_inCache": true,
  "_installable": true,
  "_location": "/flatware-session",
  "_phantomChildren": {},
  "_requested": {
    "name": "flatware-session",
    "raw": "flatware-session@0.1.x",
    "rawSpec": "0.1.x",
    "scope": null,
    "spec": ">=0.1.0 <0.2.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/flatware-session/-/flatware-session-0.1.1.tgz",
  "_shasum": "36c68fc3b491206c6603d576293ece86f3fd1d0c",
  "_shrinkwrap": null,
  "_spec": "flatware-session@0.1.x",
  "_where": "/Users/ohmh/workspace2/rm/todo",
  "author": {
    "email": "pedro.teixeira@gmail.com",
    "name": "Pedro Teixeira"
  },
  "dependencies": {},
  "description": "Session Middleware for Flatiron.js.",
  "devDependencies": {
    "tap": "0.3.x"
  },
  "directories": {},
  "dist": {
    "shasum": "36c68fc3b491206c6603d576293ece86f3fd1d0c",
    "tarball": "http://registry.npmjs.org/flatware-session/-/flatware-session-0.1.1.tgz"
  },
  "engines": {
    "node": ">= 0.8.0"
  },
  "maintainers": [
    {
      "name": "pgte",
      "email": "pedro.teixeira@gmail.com"
    }
  ],
  "name": "flatware-session",
  "optionalDependencies": {},
  "readme": "# Flatware::Session\n\nSession Middleware for Flatiron.js.\n\nSupports Memory Store and Redis.\n\n## Install\n\nAdd \"flatware-session\" to the dependencies of your `package.json` manifest.\n\n    $ npm install\n\n## Add it to your server:\n\n```javascript\nvar Session = require('flatware-session');\n\nvar server = union.createServer({\n  before: [\n    Session(),\n    // ...\n  ]\n});\n```\n\n## Customize It\n\nOptions in the constructor:\n\n```javascript\n\nvar Session = require('flatware-session');\n\nSession(sessionCookieName, store);\n```\n`sessionCookieName` defaults to \"sid\".\n\n`store` can be `require('flatware-session/memory_store')`, `require('flatware-session/redis_store')` or any other conforming store.\n\nExample using Redis:\n\n```javascript\nvar Session = require('flatware-session');\n\nvar cookieName = 'my-sid';\nvar storeOptions = {\n    timeout: 2 * 60 * 60 // 2 hours\n  , pass   : \"mypasswordforaccessingredis\",\n  , prefix : \"my-session-key-prefix-in-redis\" // defaults to \"--session-\"\n};\n\nvar store = require('flatware-session/redis_store')(storeOptions);\n\nvar server = union.createServer({\n  before: [\n    Session(cookieName),\n    // ...\n  ]\n});\n```",
  "scripts": {
    "test": "node test"
  },
  "version": "0.1.1"
}
